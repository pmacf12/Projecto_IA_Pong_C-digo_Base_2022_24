package breakout;

import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JFrame;

import utils.Commons;
import utils.GameController;

public class Breakout extends JFrame {

	private static final long serialVersionUID = 1L;

	public Breakout(GameController network, int i) {
		add(new BreakoutBoard(network, true, i));
		setTitle("Breakout");

		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLocationRelativeTo(null);
		setResizable(false);
		pack();
		setVisible(true);
	}

	public static void test(double[] values) {
		
		ArrayList<Double> valuesarray = new ArrayList<>();
		for (int index = 0; index < values.length; index++) {
			valuesarray.add(values[index]);
		}
		Breakout breakout = new Breakout(new PredictNextMove(new FeedforwardNeuralNetwork(Commons.BREAKOUT_STATE_SIZE, Commons.BREAKOUT_HIDDEN_DIM, Commons.BREAKOUT_NUM_ACTIONS,valuesarray)), 1);
	}

	public static void main(String[] args) throws IOException {
		//double[] values = {0.01417993313838739, -0.5472232858017878, -0.1818989434818883, 0.5056086076096244, -0.9714243391042754, -0.395916094834899, -0.3712528690072048, 0.9516097100447445, 0.18834269387033564, 0.8674514138918781, 0.385080155245735, 0.9605889681976683, -0.9991666669566708, 0.42408128953120383, 0.4613735704132107, -0.0273360991747027, -0.8257408990152895, 0.9891429361257782, -0.5662958989842855, -0.2535739294577206, -0.9294734395704827, 0.15550991159135763, -0.375443326468895, -0.8738405633924036, -0.6981919550361408, 0.9288514721439505, 0.8608570070367934, -0.39072284341943075, 0.2711141406742932, 0.09209828537725584, -0.16167746737485, 0.2505223697626964, 0.9372900552486971, 0.13454443881546774, 0.4921474744741683, 0.8841489526185307, 0.3192832238284129, 0.9303285969279138, 0.8884893799551519, 0.7856050741067904, -0.12496622907526023, 0.9112622457946735, -0.7199102547355425, -0.6867047281819196, 0.6145323597445576, 0.2247717223490271, -0.612215239787393, 0.8169712698820826, -0.5249754777398064, -0.8849760527565314, -0.9016622088164761, -0.23854903970065378, -0.12253193717741806, 0.5639133039224524, -0.029925135400635572, 0.30084607718420253, -0.14909078044572976, 0.9807595326807454, 0.906112962047684, -0.27264656462146064, 0.9767674514946236, -0.12665403927327512, 0.3428420519584705, -0.31124473778204975, 0.40170088525837055, 0.7610110094795737, 0.3244822029456196, -0.7306221574239713, -0.4915209759384007, -0.41077437611101697, -0.8962457006725224, 0.9946612407670015, 0.847770609161038, -0.9595744978964738, 0.6776567107536928, 0.6368188218781474, -0.22035388440445214, -0.7065023713986045, 0.9117557345694942, 0.9049727984783191, 0.5303896833007915, -0.06432389079929046, 0.9331410934513282, 0.1717045416881875, -0.4169851415009733, 0.46873200999685616, -0.7237300559015452, -0.6940313800216267, 0.783373098391188, 0.15454896998074585, -0.08641542559601723, -0.4950783411680906, -0.7575403671341512, 0.3619678078603936, -0.22491430612275454, -0.4916058983963896, 0.9580417126112326, 0.9295890765946178, -0.929968240275366, 0.1307163232600288, -0.017916309434073296, -0.3191592746917886, 0.10454058373177788, 0.4000605234365091, -0.8127739366373214, -0.47340186409667284, 0.23266709033184974, -0.36727418512871735, 0.6504335749907653, 0.7708852186928585, 0.0970632788951773, -0.3226980634983414, 0.3146869559593606, -0.30806156202198376, -0.7315501002508487, -0.7130877609421995, -0.7876595152862074, -0.7381054191015906, -0.8582337019215116, 0.5653065078397641, 0.7338130258291538, 0.17350222932506387, 0.7271877461476473, 0.48134649027526266, 0.5040967045661282, -0.6060217528938012, 0.48448098069269063};
		//test(values);
		Genetic genetic = new Genetic();
		genetic.start();
	}
}